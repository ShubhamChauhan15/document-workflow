name: 'Terraform Apply with OIDC Authentication'

on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - testing

permissions:
  id-token: write  # Grant permission for OIDC authentication token


jobs:
  terraform:
    runs-on:  linux-latest

    steps:
      - name: Run configuration script
        run: |
           sudo chmod +x ./config.sh  # Make the script executable
           sudo ./config.sh --url https://github.com/ShubhamChauhan15/document-workflow --token ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Securely pass the GitHub token as an environment variable
          
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: 'ShubhamChauhan15/document-workflow'
          token: ${{ secrets.GITHUB_TOKEN }}  # Ensure access to private repositories


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'  # Specify the Terraform version

      - name: Configure AWS OIDC Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::245843320375:role/githubaiuth  # Role ARN to assume
          aws-region: ${{ secrets.AWS_REGION }}  # AWS region from Secrets
          role-session-name: GitHubActionsSession  # Role session name
          # OIDC authentication is automatically handled by the AWS Action

      - name: Terraform Init
        run: terraform init  # Initialize Terraform

      - name: Terraform Plan
        run: terraform plan  # Run Terraform Plan

      #- name: Terraform Apply
       # run: terraform apply -auto-approve  # Apply Terraform changes (with auto-approval)

